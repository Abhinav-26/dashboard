/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/security/cve/control/list": {
    /** Fetch current security policy for global, cluster, environment and application level. */
    get: operations["FetchPolicy"];
    /** create policy */
    put: operations["CreatePolicy"];
    /** Update policy */
    post: operations["UpdatePolicy"];
    /** Delete policy */
    delete: operations["DeletePolicy"];
  };
}

export interface components {
  schemas: {
    /** Error object */
    Error: {
      /** Error code */
      code: number;
      /** Error message */
      message: string;
    };
    /** Policy Level can be one of global, cluster, environment, application */
    PolicyLevel: "Global" | "Gluster" | "Environment" | "Application";
    /** actions which can be taken on vulnerabilities */
    VulnerabilityAction: "block" | "allow";
    /** Whether vulnerability is allowed or blocked and is it inherited or is it overriden */
    VulnerabilityPermission: {
      action: components["schemas"]["VulnerabilityAction"];
      inherited?: boolean;
      isOverriden?: boolean;
    };
    /** Severity related information */
    SeverityPolicy: {
      id: number;
      severity: "high" | "medium" | "low";
      policyOrigin: string;
      policy: components["schemas"]["VulnerabilityPermission"];
    };
    /** CVE related information */
    CvePolicy: components["schemas"]["SeverityPolicy"] & {
      /** In case of CVE policy this is same as cve name else it is blank */
      name?: string;
    };
    VulnerabilityPolicy: {
      /** Is name of cluster or environment or application/environment */
      name?: string;
      /** environment id in case of application */
      envId?: number;
      severities: components["schemas"]["SeverityPolicy"][];
      cves: components["schemas"]["CvePolicy"][];
    };
    GetVulnerabilityPolicyResult: {
      level: components["schemas"]["ResourceLevel"];
      policies: components["schemas"]["VulnerabilityPolicy"][];
    };
    /** Only one of result or error will be present */
    GetVulnerabilityPolicyResponse: {
      result?: components["schemas"]["GetVulnerabilityPolicyResult"];
      error?: components["schemas"]["Error"];
    };
    IdVulnerabilityPolicyResult: {
      id: number;
    };
    /** Only one of result or error will be present */
    DeleteVulnerabilityPolicyResponse: {
      result?: components["schemas"]["IdVulnerabilityPolicyResult"];
      error?: components["schemas"]["Error"];
    };
    /** Only one of result or error will be present */
    UpdateVulnerabilityPolicyResponse: {
      result?: components["schemas"]["IdVulnerabilityPolicyResult"];
      error?: components["schemas"]["Error"];
    };
    /** Only one of result or error will be present */
    CreateVulnerabilityPolicyResponse: {
      result?: components["schemas"]["IdVulnerabilityPolicyResult"];
      error?: components["schemas"]["Error"];
    };
    /** Request object for vulnerability policy. For global policy dont set clusterId, envId and appId. For cluster set clusterId, for environment set envId, for app set appId and envId. Only one of severity or cve should be set. */
    CreateVulnerabilityPolicyRequest: {
      clusterId?: number;
      envId?: number;
      appId?: number;
      severity?: string;
      cveId?: string;
      action?: components["schemas"]["VulnerabilityAction"];
    };
  };
}

export interface operations {
  /** Fetch current security policy for global, cluster, environment and application level. */
  FetchPolicy: {
    parameters: {
      query: {
        level: components["schemas"]["ResourceLevel"];
        id?: number;
      };
    };
    responses: {
      /** Error or security policy for global, cluster, environment and application. */
      default: {
        content: {
          "application/json": components["schemas"]["GetVulnerabilityPolicyResponse"];
        };
      };
    };
  };
  /** create policy */
  CreatePolicy: {
    responses: {
      /** Create response */
      default: {
        content: {
          "application/json": components["schemas"]["CreateVulnerabilityPolicyResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateVulnerabilityPolicyRequest"];
      };
    };
  };
  /** Update policy */
  UpdatePolicy: {
    parameters: {
      query: {
        id: number;
        action: "block" | "allow";
      };
    };
    responses: {
      /** Update response */
      default: {
        content: {
          "application/json": components["schemas"]["UpdateVulnerabilityPolicyResponse"];
        };
      };
    };
  };
  /** Delete policy */
  DeletePolicy: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      /** Deleted response */
      default: {
        content: {
          "application/json": components["schemas"]["DeleteVulnerabilityPolicyResponse"];
        };
      };
    };
  };
}
